You are my repo ops assistant. Perform STEP 16.

1) Create/overwrite client/src/ui-v2/services/api.ts with this exact file:

---BEGIN---
export type Json = Record<string, any> | any[] | string | number | boolean | null;

const API_BASE =
  (import.meta as any)?.env?.VITE_API_BASE ||
  (import.meta as any)?.env?.VITE_API_URL ||
  "/api";

async function request<T>(path: string, init: RequestInit = {}): Promise<T> {
  const url = path.startsWith("http") ? path : `${API_BASE}${path}`;
  const headers = new Headers(init.headers || {});
  if (!headers.has("content-type") && init.body && !(init.body instanceof FormData)) {
    headers.set("content-type", "application/json");
  }
  const res = await fetch(url, { ...init, headers, credentials: "include" });
  if (!res.ok) {
    let detail: any;
    try { detail = await res.json(); } catch { detail = await res.text(); }
    throw new Error(typeof detail === "string" ? detail : detail?.error || `HTTP ${res.status}`);
  }
  const ct = res.headers.get("content-type") || "";
  if (ct.includes("application/json")) return res.json() as Promise<T>;
  return (await res.text()) as unknown as T;
}

export const api = {
  request,
  get<T>(path: string, init: RequestInit = {}) { return request<T>(path, { ...init, method: "GET" }); },
  post<T>(path: string, body?: Json, init: RequestInit = {}) {
    return request<T>(path, { ...init, method: "POST", body: body instanceof FormData ? body : JSON.stringify(body ?? {}) });
  },
  patch<T>(path: string, body?: Json, init: RequestInit = {}) {
    return request<T>(path, { ...init, method: "PATCH", body: body instanceof FormData ? body : JSON.stringify(body ?? {}) });
  },
  put<T>(path: string, body?: Json, init: RequestInit = {}) {
    return request<T>(path, { ...init, method: "PUT", body: body instanceof FormData ? body : JSON.stringify(body ?? {}) });
  },
  delete<T>(path: string, init: RequestInit = {}) {
    return request<T>(path, { ...init, method: "DELETE" });
  }
};

export default api;
---END---

2) Modify client/src/ui-v2/services/moments.ts and projects.ts to import { api } from './api' and replace any api.get/patch calls that used a different wrapper.

3) Run:
- npm run typecheck || true
- Report back how many errors remain in those files specifically.

STOP and wait for my confirmation before proceeding to STEP 17.